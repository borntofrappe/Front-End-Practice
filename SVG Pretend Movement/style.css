* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}
/* display the svg and labels in a horizontally centered column */
body {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: hsl(30, 100%, 95%);
    background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 150 105"><g fill="hsl(0, 0%, 100%)"><g transform="translate(7.5 7.5)"><circle cx="30" cy="30" r="30"/><circle cx="60" cy="30" r="30"/><circle cx="90" cy="30" r="30"/><circle cx="45" cy="60" r="30"/><circle cx="75" cy="60" r="30"/><circle cx="105" cy="60" r="30"/></g></g></svg>'),
        hsl(30, 100%, 95%);
    background-size: 200px;
    background-position: -100px -100px;
}

body > * + * {
    margin-top: 1.5rem;
}

#screen {
    display: block;
    width: 90vw;
    max-width: 500px;
    height: auto;
    border: 1rem solid hsl(0, 0%, 10%);
}
/* vertically align the graphics and input elements */
label {
    display: flex;
    align-items: center;
}
label input {
    margin: 1rem 1.5rem;
}
label svg {
    display: block;
    width: 40px;
    height: 40px;
}

/*
property-value pairs included tentatively and looking at this article @css
https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/
*/
input[type="range"] {
    background: none;
    -webkit-appearance: none;
}
input[type="range"]::-webkit-slider-runnable-track {
    width: 100%;
    height: 2px;
    background: hsl(0, 0%, 10%);
}
input[type="range"]::-webkit-slider-thumb {
    background: hsl(0, 0%, 10%);
    border-radius: 50%;
    width: 20px;
    height: 20px;
    transform: translate(0%, -50%);
    -webkit-appearance: none;
}
input[type="range"]::-moz-range-track {
    width: 100%;
    height: 2px;
    background: hsl(0, 0%, 10%);
}
input[type="range"]::-moz-range-thumb {
    background: hsl(0, 0%, 10%);
    border-radius: 50%;
    width: 20px;
    height: 20px;
    border-width: 0;
}

@import url("https://fonts.googleapis.com/css?family=Open+Sans:300i,800,800i&display=swap");

*,
*:before,
*:after {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

body {
    /* center horizontally */
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    background: hsl(0, 0%, 100%);
    font-family: "Open Sans", sans-serif;
    background-image: url('data:image/svg+xml,%3Csvg opacity="0.1" xmlns="http://www.w3.org/2000/svg" viewBox="-50 -50 100 100" width="40" height="40"%3E%3Cdefs%3E%3Cmask id="mask"%3E%3Cpath stroke="hsl(0, 0%25, 100%25)" stroke-width="10" fill="hsl(0, 0%25, 100%25)" d="M -45 40 l 45 -80 45 80 z"/%3E%3Cpath stroke="hsl(0, 0%25, 0%25)" stroke-width="12" stroke-linecap="round" fill="none" d="M 0 -19 v 28"/%3E%3Ccircle fill="hsl(0, 0%25, 0%25)" r="6" cy="30" /%3E%3C/mask%3E%3C/defs%3E%3Cg stroke-linecap="round" stroke-linejoin="round" %3E%3Cpath mask="url(%23mask)" stroke="hsl(0, 0%25, 20%25)" stroke-width="10" fill="hsl(0, 0%25, 20%25)" d="M -45 40 l 45 -80 45 80 z"/%3E%3C/g%3E%3C/svg%3E');
    background-size: 150px;
    background-repeat: no-repeat;
    background-position: 0% 100%;
}

/* the button's colors is picked up by the svg to color the smiling face */
#wink {
    --box-shadow-width: 0.25px;
    font-family: inherit;
    margin: 1.5rem 0 4rem;
    font-style: italic;
    position: relative;
    font-weight: 300;
    color: hsl(185, 40%, 30%);
    border: none;
    box-shadow: 0 0 0 var(--box-shadow-width) currentColor;
    background: linear-gradient(to bottom, hsl(0, 0%, 100%), hsl(200, 90%, 90%));
    /* substitute the default outline with a different color for te border */
    outline: none;
}
#wink:focus {
    --box-shadow-width: 1px;
}
#wink svg {
    width: 200px;
    height: auto;
    display: block;
}
/* add a striped bar to the left of the button */
#wink:before {
    position: absolute;
    content: "";
    right: 100%;
    top: 50%;
    height: 100%;
    width: 2.5em;
    background: repeating-linear-gradient(45deg, hsl(185, 40%, 30%) 0px, hsl(185, 40%, 30%) 20px, hsl(0, 0%, 100%) 20px, hsl(0, 0%, 100%) 22px, hsl(0, 50%, 40%) 22px, hsl(0, 50%, 40%) 47px, hsl(0, 0%, 100%) 47px, hsl(0, 0%, 100%) 49px);
    transform: translate(-0.5em, -50%);
}
/* push the text describing the button to the bottom center of the vector graphic */
#wink span {
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translate(-50%, 0.5em);
    font-size: 2em;
    white-space: nowrap;
}

/* when the button is getting clicked/pressed, change the color values to have the smiling face be white and the background maroon  */
#wink:active {
    background: linear-gradient(to bottom, hsl(0, 55%, 40%), hsl(0, 50%, 35%));
    color: hsl(0, 0%, 100%);
}
/* specificity: be sure to color the span element to avoid having the text be colored white (and blending in with the background) */
#wink:active span {
    color: hsl(0, 50%, 40%);
}

/* absolute position the error messages in the root container
the idea is to use the top properties to add successive elements below previous ones
 */
.notifications {
    position: relative;
}
.notification {
    position: absolute;
    transform: translateX(-50%);
    max-width: 500px;
    width: 80vw;
    min-height: 200px;
    padding: 2rem 1rem;
    color: hsl(185, 40%, 30%);
    background: hsl(0, 0%, 100%);
    text-align: center;
    border: 2px solid currentColor;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
}
.notification button {
    position: absolute;
    top: 0;
    right: 0;
    background: hsl(0, 0%, 80%);
    color: hsl(185, 40%, 30%);
    border: none;
    width: 42px;
    height: 42px;
}
.notification button svg {
    display: block;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

@import url("https://fonts.googleapis.com/css?family=IBM+Plex+Mono|Martel+Sans:900&display=swap");

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
body {
  min-height: 100vh;
  /* through a patterned svg include two grids of dots, at either end of the page */
  background: url('data:image/svg+xml;utf8,<svg transform="translate(0 -40)" opacity="0.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 120 200" width="120" height="200"><defs><pattern id="pattern" width="0.1" height="0.1"><circle cx="5" cy="5" r="3"></circle></pattern></defs><rect x="0" y="0" width="120" height="200" fill="url(%23pattern)"></rect></svg>'),
    url('data:image/svg+xml;utf8,<svg opacity="0.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 120 200" width="120" height="200"><defs><pattern id="pattern" width="0.1" height="0.1"><circle cx="5" cy="5" r="3"></circle></pattern></defs><rect x="0" y="0" width="120" height="200" fill="url(%23pattern)"></rect></svg>')
      hsl(0, 0%, 97%);
  background-repeat: no-repeat;
  background-position: 10% 20%, 90% 80%;
  font-family: "IBM Plex Mono", monospace;
}
/* display the content of the .worksheet in a column, horizontally centered */
.worksheet {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem;
  line-height: 2.25;
}

/* style the header to include a custom counter in the top right corner of each span element
the idea is to wrap each letter **o** in a span element
*/
.worksheet__header {
  font-family: "Martel Sans", sans-serif;
  font-size: 2.25rem;
}
.worksheet__header span {
  position: relative;
  counter-increment: custom-counter;
}
.worksheet__header span:before {
  font-family: "IBM Plex Mono", monospace;
  position: absolute;
  bottom: 0%;
  right: 0%;
  content: counter(custom-counter);
  font-size: 1rem;
}

/* absolute position the svg element in the main container
! the size is dictated by the canvas element
*/
.worksheet__paper {
  position: relative;
  box-shadow: 0 1px 10px -5px hsla(0, 0%, 0%, 0.2);
  background: #fff;
}
.worksheet__paper canvas,
.worksheet__paper svg {
  display: block;
}
.worksheet__paper svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* ! the canvas is made inaccessible as the svg overlaps
  setting pointer-events to none would allow to draw while showing the svg
  */
  pointer-events: none;
}
/* by default hide the path element describing the drawing, and show it when a class of .trace is added to the wrapping container */
.worksheet__paper svg path#trace {
  opacity: 0;
  transition: opacity 0.2s ease-out;
}
.worksheet__paper.trace svg path#trace {
  opacity: 1;
}
/* opposite to the prescribed path element, show the canvas by default and hide it when the .trace class is added */
.worksheet__paper canvas {
  opacity: 1;
  visibility: visible;
  transition: opacity 0.2s ease-in;
}
/* ! setting visibility to hidden allows to avoid drawing while the canvas is hidden from sight */
.worksheet__paper.trace canvas {
  opacity: 0;
  visibility: hidden;
}

/* display the controls one above the other
make them a flex container to display the svg+button, input+text in a row
*/
.worksheet__controls {
  margin-top: 2.5rem;
  line-height: 2.75;
}
.worksheet__controls > * {
  display: flex;
  align-items: center;
  font-size: 1rem;
  cursor: pointer;
}
/* remove the default background and border from the button */
.worksheet__controls button {
  background: none;
  border: none;
  font-family: inherit;
  color: inherit;
}
/* when the button is disabled show a lighter hue and a fitting cursor */
.worksheet__controls button:disabled {
  color: #777;
  cursor: not-allowed;
}
/* give the input and svg element the same width to align the controls' text */
.worksheet__controls button svg,
.worksheet__controls label input {
  margin-right: 0.85rem;
  width: 20px;
  height: auto;
}

/* on hover and when focused have animate the svg icon to slightly shake */
.worksheet__controls button:hover svg,
.worksheet__controls button:focus svg {
  animation: shake 0.3s ease-in-out;
  transform-origin: 50% 100%;
}
/* remove the animation when the button is disabled
works due to higher specificity
*/
.worksheet__controls button:disabled svg {
  animation: none;
}
@keyframes shake {
  25% {
    transform: rotate(8deg);
  }
  75% {
    transform: rotate(-8deg);
  }
}
